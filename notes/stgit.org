#+ TITLE: stgit usage

* stgit
:PROPERTIES:
:CUSTOM_ID: stgit 
:END:

** what's the point?
:PROPERTIES:
:CUSTOM_ID: what's the point?
:END:
The idea is to be able to keep a clean git history that allows for it to be git bisectable.
Rather than co-mingling git commits, commits should contain one reasonable change.

stgit also allows for reordering commits before they are pushed.
So, if you're building out some new feature, you could work out different parts of you code and move them around after the fact.

* workflow
:PROPERTIES:
:CUSTOM_ID: workflow 
:END:

** initialize a path
:PROPERTIES:
:CUSTOM_ID: initialize a path
:END:

#+begin_src bash
  stg init
#+end_src

** create a new patch
:PROPERTIES:
:CUSTOM_ID: create a new path
:END:

#+begin_src bash
  stg new <name of patch>
#+end_src

... make some changes

** Add all changes
:PROPERTIES:
:CUSTOM_ID: add all changes 
:END:

this seems to add every change to patch regardless on if it was staged or not.

#+begin_src bash
  stg refresh  
#+end_src

** show changes
:PROPERTIES:
:CUSTOM_ID: show changes
:END:

#+begin_src bash
  stg show
#+end_src

#+begin_src bash
  stg show <some patch name>
#+end_src


** navigating between patches

*** unapply a single patch
#+begin_src bash
stg pop
#+end_src

*** reapply a single patch
#+begin_src bash
stg push
#+end_src

*** navigate to a patch
#+begin_quote
this applies the necessary push/pop operations to get to the patch
#+end_quote

#+begin_src bash
stg goto <patch-name>
#+end_src

** catch up with remote

*** unapply every patch
#+begin_src bash
stg pop --all
# you can checkout where you are with standard commands
#  e.g. `git status` `git log --oneline` `stg series`
#+end_src

*** pull down remote changes
#+begin_src bash
git pull
#+end_src

*** reapply every patch
#+begin_src bash
stg push --all
#+end_src

** commit
:PROPERTIES:
:CUSTOM_ID: commit
:END:

#+begin_src bash
  stg commit --all
#+end_src

this tells stg that the commits have graduated to actual commits (they were actual commits before, but now stg will stop tracking them).
I think the intent is for you to git push after this.


** Reference
:PROPERTIES:
:CUSTOM_ID: reference
:END:

- Official documentation: https://stacked-git.github.io/guides/tutorial/
- `man stg` for local command reference

